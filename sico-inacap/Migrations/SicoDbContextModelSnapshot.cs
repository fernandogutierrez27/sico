// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using sicoInacap.Models;
using System;

namespace sicoInacap.Migrations
{
    [DbContext(typeof(SicoDbContext))]
    partial class SicoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("sicoInacap.Models.Administrador", b =>
                {
                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Username");

                    b.ToTable("Administrador");
                });

            modelBuilder.Entity("sicoInacap.Models.Agenda", b =>
                {
                    b.Property<int>("Codigo");

                    b.Property<int>("CodigoEvento");

                    b.Property<int>("CodigoRecinto");

                    b.Property<DateTime>("HoraInicio")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("HoraTermino")
                        .HasColumnType("datetime");

                    b.HasKey("Codigo");

                    b.HasIndex("CodigoEvento");

                    b.HasIndex("CodigoRecinto");

                    b.ToTable("Agenda");
                });

            modelBuilder.Entity("sicoInacap.Models.AgendaBloque", b =>
                {
                    b.Property<int>("CodigoAgenda");

                    b.Property<int>("CodigoBloque");

                    b.HasKey("CodigoAgenda", "CodigoBloque");

                    b.HasIndex("CodigoBloque");

                    b.ToTable("AgendaBloque");
                });

            modelBuilder.Entity("sicoInacap.Models.Asistencia", b =>
                {
                    b.Property<int>("CodigoEvento");

                    b.Property<string>("UsernameAsistente")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("CodigoEvento", "UsernameAsistente");

                    b.HasIndex("UsernameAsistente");

                    b.ToTable("Asistencia");
                });

            modelBuilder.Entity("sicoInacap.Models.Bloque", b =>
                {
                    b.Property<int>("Codigo");

                    b.Property<TimeSpan>("HoraInicio");

                    b.Property<TimeSpan>("HoraTermino");

                    b.HasKey("Codigo");

                    b.ToTable("Bloque");
                });

            modelBuilder.Entity("sicoInacap.Models.Cargo", b =>
                {
                    b.Property<int>("Codigo");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .IsUnicode(false);

                    b.HasKey("Codigo");

                    b.ToTable("Cargo");
                });

            modelBuilder.Entity("sicoInacap.Models.Categoria", b =>
                {
                    b.Property<int>("Codigo");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .IsUnicode(false);

                    b.HasKey("Codigo");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("sicoInacap.Models.EstadoEvento", b =>
                {
                    b.Property<int>("Codigo");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Codigo");

                    b.ToTable("EstadoEvento");
                });

            modelBuilder.Entity("sicoInacap.Models.Evento", b =>
                {
                    b.Property<int>("Codigo");

                    b.Property<int>("CodigoCategoria");

                    b.Property<int>("CodigoEstado");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .IsUnicode(false);

                    b.Property<string>("Icono")
                        .IsRequired()
                        .IsUnicode(false);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .IsUnicode(false);

                    b.Property<string>("UsernameOrganizador")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("UsernameResponsable")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Codigo");

                    b.HasIndex("CodigoCategoria");

                    b.HasIndex("CodigoEstado");

                    b.HasIndex("UsernameOrganizador");

                    b.HasIndex("UsernameResponsable");

                    b.ToTable("Evento");
                });

            modelBuilder.Entity("sicoInacap.Models.Interes", b =>
                {
                    b.Property<int>("CodigoEvento");

                    b.Property<string>("UsernameInteresado")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("CodigoEvento", "UsernameInteresado");

                    b.HasIndex("UsernameInteresado");

                    b.ToTable("Interes");
                });

            modelBuilder.Entity("sicoInacap.Models.Miembro", b =>
                {
                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("CodigoCargo");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("datetime");

                    b.Property<string>("Fono")
                        .IsRequired()
                        .HasMaxLength(9)
                        .IsUnicode(false);

                    b.Property<string>("Run")
                        .IsRequired()
                        .HasColumnName("RUN")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("Username");

                    b.HasIndex("CodigoCargo");

                    b.ToTable("Miembro");
                });

            modelBuilder.Entity("sicoInacap.Models.Recinto", b =>
                {
                    b.Property<int>("Codigo");

                    b.Property<string>("Latitud")
                        .IsRequired()
                        .IsUnicode(false);

                    b.Property<string>("Longitud")
                        .IsRequired()
                        .IsUnicode(false);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .IsUnicode(false);

                    b.HasKey("Codigo");

                    b.ToTable("Recinto");
                });

            modelBuilder.Entity("sicoInacap.Models.Simpatizante", b =>
                {
                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .IsUnicode(false);

                    b.Property<string>("Email")
                        .IsRequired()
                        .IsUnicode(false);

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime");

                    b.Property<int>("Genero");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .IsUnicode(false);

                    b.HasKey("Username");

                    b.ToTable("Simpatizante");
                });

            modelBuilder.Entity("sicoInacap.Models.Usuario", b =>
                {
                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("FechaInscripcion")
                        .HasColumnType("datetime");

                    b.Property<string>("Password")
                        .IsRequired()
                        .IsUnicode(false);

                    b.HasKey("Username");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("sicoInacap.Models.Administrador", b =>
                {
                    b.HasOne("sicoInacap.Models.Usuario", "UsernameNavigation")
                        .WithOne("Administrador")
                        .HasForeignKey("sicoInacap.Models.Administrador", "Username")
                        .HasConstraintName("FK_Administrador_Usuario");
                });

            modelBuilder.Entity("sicoInacap.Models.Agenda", b =>
                {
                    b.HasOne("sicoInacap.Models.Evento", "CodigoEventoNavigation")
                        .WithMany("Agenda")
                        .HasForeignKey("CodigoEvento")
                        .HasConstraintName("FK_Agenda_Evento");

                    b.HasOne("sicoInacap.Models.Recinto", "CodigoRecintoNavigation")
                        .WithMany("Agenda")
                        .HasForeignKey("CodigoRecinto")
                        .HasConstraintName("FK_Agenda_Recinto");
                });

            modelBuilder.Entity("sicoInacap.Models.AgendaBloque", b =>
                {
                    b.HasOne("sicoInacap.Models.Agenda", "CodigoAgendaNavigation")
                        .WithMany("AgendaBloque")
                        .HasForeignKey("CodigoAgenda")
                        .HasConstraintName("FK_AgendaBloque_Agenda");

                    b.HasOne("sicoInacap.Models.Bloque", "CodigoBloqueNavigation")
                        .WithMany("AgendaBloque")
                        .HasForeignKey("CodigoBloque")
                        .HasConstraintName("FK_AgendaBloque_Bloque");
                });

            modelBuilder.Entity("sicoInacap.Models.Asistencia", b =>
                {
                    b.HasOne("sicoInacap.Models.Evento", "CodigoEventoNavigation")
                        .WithMany("Asistencia")
                        .HasForeignKey("CodigoEvento")
                        .HasConstraintName("FK_Asistencia_Evento");

                    b.HasOne("sicoInacap.Models.Usuario", "UsernameAsistenteNavigation")
                        .WithMany("Asistencia")
                        .HasForeignKey("UsernameAsistente")
                        .HasConstraintName("FK_Asistencia_Usuario");
                });

            modelBuilder.Entity("sicoInacap.Models.Evento", b =>
                {
                    b.HasOne("sicoInacap.Models.Categoria", "CodigoCategoriaNavigation")
                        .WithMany("Evento")
                        .HasForeignKey("CodigoCategoria")
                        .HasConstraintName("FK_Evento_Categoria");

                    b.HasOne("sicoInacap.Models.EstadoEvento", "CodigoEstadoNavigation")
                        .WithMany("Evento")
                        .HasForeignKey("CodigoEstado")
                        .HasConstraintName("FK_Evento_EstadoEvento");

                    b.HasOne("sicoInacap.Models.Administrador", "UsernameOrganizadorNavigation")
                        .WithMany("Evento")
                        .HasForeignKey("UsernameOrganizador")
                        .HasConstraintName("FK_Evento_Administrador");

                    b.HasOne("sicoInacap.Models.Miembro", "UsernameResponsableNavigation")
                        .WithMany("Evento")
                        .HasForeignKey("UsernameResponsable")
                        .HasConstraintName("FK_Evento_Miembro");
                });

            modelBuilder.Entity("sicoInacap.Models.Interes", b =>
                {
                    b.HasOne("sicoInacap.Models.Evento", "CodigoEventoNavigation")
                        .WithMany("Interes")
                        .HasForeignKey("CodigoEvento")
                        .HasConstraintName("FK_Interes_Evento");

                    b.HasOne("sicoInacap.Models.Usuario", "UsernameInteresadoNavigation")
                        .WithMany("Interes")
                        .HasForeignKey("UsernameInteresado")
                        .HasConstraintName("FK_Interes_Usuario");
                });

            modelBuilder.Entity("sicoInacap.Models.Miembro", b =>
                {
                    b.HasOne("sicoInacap.Models.Cargo", "CodigoCargoNavigation")
                        .WithMany("Miembro")
                        .HasForeignKey("CodigoCargo")
                        .HasConstraintName("FK_Miembro_Cargo");

                    b.HasOne("sicoInacap.Models.Usuario", "UsernameNavigation")
                        .WithOne("Miembro")
                        .HasForeignKey("sicoInacap.Models.Miembro", "Username")
                        .HasConstraintName("FK_Miembro_Usuario");
                });

            modelBuilder.Entity("sicoInacap.Models.Simpatizante", b =>
                {
                    b.HasOne("sicoInacap.Models.Usuario", "UsernameNavigation")
                        .WithOne("Simpatizante")
                        .HasForeignKey("sicoInacap.Models.Simpatizante", "Username")
                        .HasConstraintName("FK_Simpatizante_Usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
