@model SicoInacap.Models.Evento

@{
    ViewBag.Title = "Crear evento";
}

<nav aria-label="breadcrumb" class="mt-2">
    <ol class="breadcrumb">
        <li class="breadcrumb-item">@Html.ActionLink("Gestion de eventos", "Index", "Eventos")</li>
        <li class="breadcrumb-item active">Crear evento</li>
    </ol>
</nav>

<span class="badge badge-pill badge-success mb-2">
    @Html.ActionLink("Regresar", "Index", null, new { @class = "nav-link text-light" })
</span>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
              
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Codigo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Codigo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Codigo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CodigoCategoria, "CodigoCategoria", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CodigoCategoria", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CodigoCategoria, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CodigoEstado, "CodigoEstado", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CodigoEstado", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CodigoEstado, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Descripcion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UsernameOrganizador, "UsernameOrganizador", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("UsernameOrganizador", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.UsernameOrganizador, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UsernameResponsable, "UsernameResponsable", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("UsernameResponsable", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.UsernameResponsable, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-12">
                <input type="submit" value="Crear" class="btn btn-primary btn-lg btn-block" />
            </div>
        </div>
    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
