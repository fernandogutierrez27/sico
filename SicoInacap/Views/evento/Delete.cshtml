@model SicoInacap.Models.Evento

@{
    ViewBag.Title = "Eliminar evento";
}
<nav aria-label="breadcrumb" class="mt-2">
    <ol class="breadcrumb bg-dark">
        <li class="breadcrumb-item">@Html.ActionLink("Gestion de Eventos", "Index", "evento")</li>
        <li class="breadcrumb-item active">Borrar Evento</li>
    </ol>
</nav>

<span class="badge badge-pill badge-success mb-2">
    @Html.ActionLink("Regresar", "Index", null, new { @class = "nav-link text-light" })
</span>


<div class="card">
    <div class="card-header card-header-primary text-center">
        <h4 class="card-title">Evento a Eliminar</h4>
    </div>
    <div class="card-body table-responsive">
        <table class="table bg-dark text-light rounded">
            <thead class="text-primary text-center">
                <tr>
                    <th>
                        Encargado
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Categoria.Nombre)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.EstadoEvento.Nombre)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Miembro.Fono)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Descripcion)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Nombre)
                    </th>
                   
                </tr>
            </thead>
            <tbody class="text-center">
               
            <tr>
                <td>
                    @Html.DisplayFor(model => model.Administrador.Username)
                </td>
                <td>
                    @Html.DisplayFor(model => model.Categoria.Nombre)
                </td>
                <td>
                    @Html.DisplayFor(model => model.EstadoEvento.Nombre)
                </td>
                <td>
                    @Html.DisplayFor(model => model.Miembro.Fono)
                </td>
                <td>
                    @Html.DisplayFor(model => model.Descripcion)
                </td>
                <td>
                    @Html.DisplayFor(model => model.Nombre)
                </td>
                
            </tr>

            </tbody>
        </table>
        <div class="form-actions no-color">
            <input type="button" value="Borrar" class="btn btn-danger btn-lg btn-block" data-toggle="modal" data-target="#exampleModalCenter" />

        </div>
    </div>
</div>





<div class="modal fade" id="exampleModalCenter" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalCenterTitle">Borrar Evento</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                ¿Esta Seguro de Borrar este Evento?
            </div>
            <div class="modal-footer">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="form-actions no-color">
                        <input type="submit" value="Aceptar" class="btn btn-success" />
                        <button type="button" class="btn btn-danger" data-dismiss="modal">Cancelar</button>
                    </div>
                }

            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(() => {
            @if(ViewBag.error)
            {
                @:swal("Eliminación Cancelada", "No se puede eliminar el evento, puesto que ya se encuentra agendado","error")
            }
        });

    </script>
}

