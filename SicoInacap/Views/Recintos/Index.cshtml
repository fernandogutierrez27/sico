@model IEnumerable<SicoInacap.Models.Recinto>

@{
    ViewBag.Title = "Inicio Recinto";
}

<nav aria-label="breadcrumb" class="mt-2">
    <ol class="breadcrumb bg-dark">
        <li class="breadcrumb-item">@Html.ActionLink("Gestion de Recintos", "Index", "Recintos", null)</li>
    </ol>
</nav>
<span class="label label-success">
    
</span>

<span class="badge badge-pill badge-primary mb-2">
    @Html.ActionLink("Crear Nuevo Recinto", "Create", null , new {@class = "nav-link text-light" })
</span>
<table class="table table-striped table-dark d-none" id="mitabla">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(model => model.Nombre)</th>
            <th>@Html.DisplayNameFor(model => model.Latitud)</th>
            <th>@Html.DisplayNameFor(model => model.Longitud)</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Nombre)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Latitud)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Longitud)
                </td>
            </tr>
        }
    </tbody>
</table>

<table class="table table-striped table-dark">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(model => model.Nombre)</th>
            <th>@Html.DisplayNameFor(model => model.Latitud)</th>
            <th>@Html.DisplayNameFor(model => model.Longitud)</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Nombre)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Latitud)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Longitud)
            </td>
            <td>
                <span class="badge badge-pill badge-warning mb-2">
                    @Html.ActionLink("Modificar", "Edit", new { id = item.Codigo }, new { @class = "nav-link text-light" })
                </span>
                <span class="badge badge-pill badge-info mb-2">
                    @Html.ActionLink("Detalle", "Details", new { id = item.Codigo }, new { @class = "nav-link text-light" })
                </span>
                <span class="badge badge-pill badge-danger mb-2">
                    @Html.ActionLink("Borrar", "Delete", new { id = item.Codigo }, new { @class = "nav-link text-light" })
                </span>
            </td>
        </tr>
        }
    </tbody>
</table>

<div id="map" style="height:400px" class="my-4 shadow p-3 mb-5 bg-white rounded"></div>

<script>
    function inicializacion() {

        //Creo un nuevo mapa situado en Inacap, Antofagasta
        var mapa = new google.maps.Map(document.getElementById("map"), {
            center: new google.maps.LatLng(-23.560014050233416, -70.40047645568848),
            zoom: 17,
            mapTypeId: google.maps.MapTypeId.ROADMAP,
            styles: [
                { elementType: 'geometry', stylers: [{ color: '#242f3e' }] },
                { elementType: 'labels.text.stroke', stylers: [{ color: '#242f3e' }] },
                { elementType: 'labels.text.fill', stylers: [{ color: '#746855' }] },
                {
                    featureType: 'administrative.locality',
                    elementType: 'labels.text.fill',
                    stylers: [{ color: '#d59563' }]
                },
                {
                    featureType: 'poi',
                    elementType: 'labels.text.fill',
                    stylers: [{ color: '#d59563' }]
                },
                {
                    featureType: 'poi.park',
                    elementType: 'geometry',
                    stylers: [{ color: '#263c3f' }]
                },
                {
                    featureType: 'poi.park',
                    elementType: 'labels.text.fill',
                    stylers: [{ color: '#6b9a76' }]
                },
                {
                    featureType: 'road',
                    elementType: 'geometry',
                    stylers: [{ color: '#38414e' }]
                },
                {
                    featureType: 'road',
                    elementType: 'geometry.stroke',
                    stylers: [{ color: '#212a37' }]
                },
                {
                    featureType: 'road',
                    elementType: 'labels.text.fill',
                    stylers: [{ color: '#9ca5b3' }]
                },
                {
                    featureType: 'road.highway',
                    elementType: 'geometry',
                    stylers: [{ color: '#746855' }]
                },
                {
                    featureType: 'road.highway',
                    elementType: 'geometry.stroke',
                    stylers: [{ color: '#1f2835' }]
                },
                {
                    featureType: 'road.highway',
                    elementType: 'labels.text.fill',
                    stylers: [{ color: '#f3d19c' }]
                },
                {
                    featureType: 'transit',
                    elementType: 'geometry',
                    stylers: [{ color: '#2f3948' }]
                },
                {
                    featureType: 'transit.station',
                    elementType: 'labels.text.fill',
                    stylers: [{ color: '#d59563' }]
                },
                {
                    featureType: 'water',
                    elementType: 'geometry',
                    stylers: [{ color: '#17263c' }]
                },
                {
                    featureType: 'water',
                    elementType: 'labels.text.fill',
                    stylers: [{ color: '#515c6d' }]
                },
                {
                    featureType: 'water',
                    elementType: 'labels.text.stroke',
                    stylers: [{ color: '#17263c' }]
                }
            ]
        });

        //Inicializar marcador de la ubicación
        
        var tabla2 = document.getElementById("mitabla");
        var tdsTabla2 = tabla2.getElementsByTagName("td");
        var i = 0;
        var contador = 0;
        var inputNombre;
        var inputLongitud;
        var inputLatitud;
        for (i = 0; i < tdsTabla2.length; i++) {
            
            contador++
            if (contador == 1) {
                inputNombre = tdsTabla2[i].innerHTML;
            } else if (contador == 2) {
                inputLatitud = tdsTabla2[i].innerHTML;
            } else if (contador == 3) {
                inputLongitud = tdsTabla2[i].innerHTML;
                var coordenadas = new google.maps.LatLng(inputLatitud, inputLongitud);
                var marcador = new google.maps.Marker({ position: coordenadas, map: mapa, animation: google.maps.Animation.DROP, title: inputNombre });
                contador = 0;
            }
            
        }


    }

</script>